name: ci-develop

on:
  push:
    branches:
      - develop

jobs:
  init:
    name: 🧐 Inintialize
    runs-on: ubuntu-latest
    outputs:
      step_init: ${{ steps.check_flag.outputs.step_init }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check for --no-ci flag in commit message
        id: check_flag
        run: |
          echo "Checking commit message for --no-ci flag..."
          if echo "${{ github.event.head_commit.message }}" | grep -- '--no-ci'; then
            echo "step_init=false" >> $GITHUB_OUTPUT
          else
            echo "step_init=true" >> $GITHUB_OUTPUT
          fi

  build-for-testing:
    name: 🏗️ Build for testing
    needs: init
    if: ${{ needs.init.outputs.step_init == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract short SHA
        run: echo "SHORT_SHA=$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_ENV

      - name: Build/Publish as GitHub Package
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/${{ github.repository }}-dev:latest
            ghcr.io/${{ github.repository }}-dev:${{ env.SHORT_SHA }}
